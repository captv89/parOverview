// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.639
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/captv89/parOverview/model"

func Leaflet(data []model.GeoParReport) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_Leaflet_9c73`,
		Function: `function __templ_Leaflet_9c73(data){const map = L.map('map', {
    center: L.latLng(0, 0),
    zoom: 3,
    })

    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution:
        '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
    }).addTo(map)

    const markers = L.markerClusterGroup()

    data.forEach((report) => {
    const marker = L.marker([report.Latitude, report.Longitude])
        marker.bindPopup(
            ` + "`" + `<b class="text-xl">${report.ShipName}</b>
            <br><b>Vessel Type: </b>${report.ShipType}
            <br><b>Date: </b>${report.Date}
            <br><b>Area: </b>${report.Area}
            <br><b>Incident Details: </b> ${report.IncidentDetails}
            <br><b>Consequences For Crew: </b>${report.Consequences}
            <br><b>Action By Crew: </b>${report.ActionTakenByShip}
            <br><b>Coastal State Action Taken: </b> ${report.CoastalStateActionTaken}` + "`" + `
        )
        markers.addLayer(marker)

        map.addLayer(markers)
    })
}`,
		Call:       templ.SafeScript(`__templ_Leaflet_9c73`, data),
		CallInline: templ.SafeScriptInline(`__templ_Leaflet_9c73`, data),
	}
}

func MapComponent(data []model.GeoParReport) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"h-full\"><div id=\"map\" class=\"w-full h-full z-40\"></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Leaflet(data).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
